pd_multiv2$FamilyPD <- ifelse(pd_multiv2$FamilyPD != 2, 1, 0)
#Heavy Metal exposure (years)
pd_multiv2$HMetals_years <- as.numeric(pd_multiv2$HMetals_years)
pd_multiv2$HMetals_years[is.na(pd_multiv2$HMetals_years)] <- 0
#Head injuries
pd_multiv2 <- pd_multiv2[is.na(pd_multiv2$Head_injury) == F |
pd_multiv2$Head_injury == 4,]
pd_multiv2$Head_injury <- ifelse(pd_multiv2$Head_injury != 3, 1, 0)
#Near Agricultural fields
pd_multiv2$Near_Agriculture_G <- ifelse(pd_multiv2$Near_Agriculture_17 == 1 |
pd_multiv2$Near_Agriculture_25 == 1 |
pd_multiv2$Near_Agriculture_40 == 1 |
pd_multiv2$Near_Agriculture_60 == 1 |
pd_multiv2$Near_Agriculture_61 == 1, 1, 0)
glm_levels1 <-  glm(PD ~ WPest_time + NWPest_time + Age + Sex + Education_level +
tobacco_year + Coffee_year + Alcohol + NSAIDs +Aspirin_year +
FamilyPD + HMetals_years + Near_Agriculture_G+ Head_injury,
data = pd_multiv2, family = "binomial")
summary(glm_levels1)
OR_glm_levels1 <- tidy(glm_levels1, exponentiate = T, conf.int = T)
EXP_AMB$span_part3_aspirin
EXP_AMB$span_part3_aspirin.factor
EXP_AMB$span_part3_tobacco_use
EXP_AMB$span_part3_aspirin
### Analysis by categories
pd_multiv3 <- data.frame (PD = as.numeric(EXP_AMB$span_part1_status),
WPest_Amount = as.numeric(EXP_AMB$span_part3_time_using_pesticide),
NWPest_Amount = as.numeric(EXP_AMB$span_part3_time_using_pesticide_non_work),
Age = as.numeric(EXP_AMB$span_part2_age_today),
Sex = as.numeric(EXP_AMB$span_part2_sex),
Education_level = as.numeric(EXP_AMB$span_part2_highest_level_of_education),
Tobacco_025 = as.numeric(EXP_AMB$span_part3_years_of_tobacco_1_2_pack),
Tobacco_075 = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_tha_12less_than_1),
Tobacco_15  = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_than_1_less_than_2),
Tobacco_25  = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_than_2_per_day),
Coffee_less_2_week = as.numeric(EXP_AMB$span_part3_caffeine_consumption_lees_than_2),
Coffee_2_6_week = as.numeric(EXP_AMB$span_part3_caffeine_consumption_2_6_cups_a_week),
Coffee_1_2 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_1_2_cups_a_day),
Coffee_3_5 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_3_5_cups_a_day),
Coffee_more_6 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_6_or_more_cups_a_day),
Alcohol = as.numeric(EXP_AMB$span_part3_alcohol_in_your_lifetime_have_you),
NSAIDs = as.numeric(EXP_AMB$span_part3_non_steroidal_anti_inflamm),
Aspirin = as.numeric(EXP_AMB$span_part3_aspirin),
FamilyPD = as.numeric(EXP_AMB$span_part2_pd_on_family),
HMetals = HMetals = as.numeric(EXP_AMB$span_part3_metal_use),
### Analysis by categories
pd_multiv3 <- data.frame (PD = as.numeric(EXP_AMB$span_part1_status),
WPest_Amount = as.numeric(EXP_AMB$span_part3_time_using_pesticide),
NWPest_Amount = as.numeric(EXP_AMB$span_part3_time_using_pesticide_non_work),
Age = as.numeric(EXP_AMB$span_part2_age_today),
Sex = as.numeric(EXP_AMB$span_part2_sex),
Education_level = as.numeric(EXP_AMB$span_part2_highest_level_of_education),
Tobacco_025 = as.numeric(EXP_AMB$span_part3_years_of_tobacco_1_2_pack),
Tobacco_075 = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_tha_12less_than_1),
Tobacco_15  = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_than_1_less_than_2),
Tobacco_25  = as.numeric(EXP_AMB$span_part3_years_of_tobacco_more_than_2_per_day),
Coffee_less_2_week = as.numeric(EXP_AMB$span_part3_caffeine_consumption_lees_than_2),
Coffee_2_6_week = as.numeric(EXP_AMB$span_part3_caffeine_consumption_2_6_cups_a_week),
Coffee_1_2 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_1_2_cups_a_day),
Coffee_3_5 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_3_5_cups_a_day),
Coffee_more_6 = as.numeric(EXP_AMB$span_part3_caffeine_consumption_6_or_more_cups_a_day),
Alcohol = as.numeric(EXP_AMB$span_part3_alcohol_in_your_lifetime_have_you),
NSAIDs = as.numeric(EXP_AMB$span_part3_non_steroidal_anti_inflamm),
Aspirin = as.numeric(EXP_AMB$span_part3_aspirin),
FamilyPD = as.numeric(EXP_AMB$span_part2_pd_on_family),
HMetals = as.numeric(EXP_AMB$span_part3_metal_use),
Head_injury = as.numeric(EXP_AMB$span_part3_have_you_ever_had_a_head_i))
#Pest_years (continuous: delete "no sabe"; NA = 0); Education level (factor); Tobacco (continuous: packs per year);
#Caffeine (continuous: packs/year); Alcohol (factor); NSAIDs: (factor); Aspirin (continuous: Aspirine/year)
#HMetals: (continuous) #Head_Injury (factor)
#
#Residence near agricultural fields (Categories):
pd_multiv3$Near_Agriculture_17 <- ifelse(EXP_AMB$span_part3_from_0_17_residence_located_near_farm_fields ==1 |
EXP_AMB$span_part3_from_0_17_residence_located_near_farm_fields_2 ==1 |
EXP_AMB$span_part3_from_0_17_residence_located_near_farm_fields_3 ==1 |
EXP_AMB$span_part3_from_0_17_residence_located_near_farm_fields_4 ==1 |
EXP_AMB$span_part3_from_0_17_residence_located_near_farm_fields_5 ==1, 1, 0)
pd_multiv3$Near_Agriculture_17[is.na(pd_multiv3$Near_Agriculture_17)] <-  0
pd_multiv3$Near_Agriculture_25 <- ifelse(EXP_AMB$span_part3_from_18_25_residence_located_near_farm_fields == 1|
EXP_AMB$span_part3_from_18_25_residence_located_near_farm_fields_2 == 1 |
EXP_AMB$span_part3_from_18_25_residence_located_near_farm_fields_3 == 1 |
EXP_AMB$span_part3_from_18_25_residence_located_near_farm_fields_4 == 1, 1, 0)
pd_multiv3$Near_Agriculture_25[is.na(pd_multiv3$Near_Agriculture_25)] <-  0
pd_multiv3$Near_Agriculture_40 <-  ifelse(EXP_AMB$span_part3_from_26_40_residence_located_near_farm_fields == 1 |
EXP_AMB$span_part3_from_26_40_residence_located_near_farm_fields_2 == 1 |
EXP_AMB$span_part3_from_26_40_residence_located_near_farm_fields_3 == 1, 1, 0)
pd_multiv3$Near_Agriculture_40[is.na(pd_multiv3$Near_Agriculture_40)] <- 0
pd_multiv3$Near_Agriculture_60 <- ifelse(EXP_AMB$span_part3_from_41_60_residence_located_near_farm_fields == 1 |
EXP_AMB$span_part3_from_41_60_residence_located_near_farm_fields_2 == 1,1,0)
pd_multiv3$Near_Agriculture_60[is.na(pd_multiv3$Near_Agriculture_60)] <-  0
pd_multiv3$Near_Agriculture_61 <- ifelse(EXP_AMB$span_part3_from_61_to_present_residence_located_near_farm_fields == 1, 1, 0)
pd_multiv3$Near_Agriculture_61[is.na(pd_multiv3$Near_Agriculture_61)] <- 0
#Pest years
pd_multiv3$WPest_Amount[is.na(pd_multiv3$WPest_Amount)] <- 0
pd_multiv3$WPest_Amount <- factor(pd_multiv3$WPest_Amount, levels = c(0,1,2,3,4,5),
labels = c("No work pesticide use", "1-5 days/year",
"6-10 days/year","11-30 days/year",
">30 days/year", "Do not know"))
pd_multiv3$NWPest_Amount[is.na(pd_multiv3$NWPest_Amount)] <- 0
pd_multiv3$NWPest_Amount <- factor(pd_multiv3$NWPest_Amount, levels = c(0,1,2,3,4,5),
labels = c("No work pesticide use", "1-5 days/year",
"6-10 days/year","11-30 days/year",
">30 days/year", "Do not know"))
#PD
pd_multiv3$PD <-  pd_multiv3$PD-1 #0: PD unaffected; 1: PD
#Sex
pd_multiv3$Sex <-  pd_multiv3$Sex-1 #0: Male; 1: Female
#Education level
pd_multiv3 <-  pd_multiv3[is.na(pd_multiv3$Education_level) == F,]
pd_multiv3$Education_level <- factor(pd_multiv3$Education_level,
levels = c(1,2,3,4,5,6,7),
labels = c("No studies", "Completed Primary",
"Incompleted high school", "Completed high school",
"Incompleted college", "Completed College",
"Graduate degree"))
#Tobacco (packs per year)
pd_multiv3$Tobacco_025[is.na(pd_multiv3$Tobacco_025)] <- 0
pd_multiv3$Tobacco_075[is.na(pd_multiv3$Tobacco_075)] <- 0
pd_multiv3$Tobacco_15[is.na(pd_multiv3$Tobacco_15)] <- 0
pd_multiv3$Tobacco_25[is.na(pd_multiv3$Tobacco_25)] <- 0
pd_multiv3$Tobacco <- ifelse(pd_multiv3$Tobacco_25 != 0,4,
ifelse(pd_multiv3$Tobacco_15!=0, 3,
ifelse(pd_multiv3$Tobacco_075, 2,
ifelse(pd_multiv3$Tobacco_025, 1, 0))))
pd_multiv3$Tobacco <- factor(pd_multiv3$Tobacco, levels = c(0,1,2,3,4),
labels = c("Do not consume", "<0.5 packs/day",
"0.5 - 1 packs/day", "1-2 packs/day",
">2 packs/day"))
#Caffeine (cups/Week per year)
pd_multiv3$Coffee_less_2_week[is.na(pd_multiv3$Coffee_less_2_week)] <- 0
pd_multiv3$Coffee_2_6_week[is.na(pd_multiv3$Coffee_2_6_week)] <- 0
pd_multiv3$Coffee_1_2[is.na(pd_multiv3$Coffee_1_2)] <- 0
pd_multiv3$Coffee_3_5[is.na(pd_multiv3$Coffee_3_5)] <- 0
pd_multiv3$Coffee_more_6[is.na(pd_multiv3$Coffee_more_6)] <- 0
pd_multiv3$Coffee <- ifelse(pd_multiv3$Coffee_more_6 != 0, 5,
ifelse(pd_multiv3$Coffee_3_5 != 0, 4,
ifelse(pd_multiv3$Coffee_1_2 != 0, 3,
ifelse(pd_multiv3$Coffee_2_6_week, 2,
ifelse(pd_multiv3$Coffee_less_2_week, 1, 0)))))
pd_multiv3$Coffee <- factor(pd_multiv3$Coffee, levels = c(0,1,2,3,4,5),
labels = c("Do not consume", "<2 cups/week",
"2-6 cups/week", "1-2 cups/day",
"3-5 cups/day", ">6 cups/day"))
#Alcohol
pd_multiv3$Alcohol <- (pd_multiv3$Alcohol-2)*-1
#NSAIDs intake:
pd_multiv3$NSAIDs <- ifelse(pd_multiv3$NSAIDs == 1, 0 , 1) #0: no intake; 1: intake
#Aspirin intake/week per year
pd_multiv3$Aspirin <- factor(pd_multiv3$Aspirin, levels = c(1,2,3,4,5),
labels = c("Never", "<1 times/week",
"1-4 times/week", "5-10 times/week",
">10 times/week"))
#Family PD
pd_multiv3 <- pd_multiv3[pd_multiv3$FamilyPD !=4,]
pd_multiv3$FamilyPD_sure <- ifelse(pd_multiv3$FamilyPD==1, 1,0) #Only sure answers (exluding 3)
pd_multiv3$FamilyPD <- ifelse(pd_multiv3$FamilyPD != 2, 1, 0)
#Heavy Metal exposure (years)
pd_multiv3$HMetals <- ifelse(pd_multiv3$HMetals ==1, 1, 0)
#Head injuries
pd_multiv3 <- pd_multiv3[is.na(pd_multiv3$Head_injury) == F |
pd_multiv3$Head_injury == 4,]
pd_multiv3$Head_injury <- ifelse(pd_multiv3$Head_injury != 3, 1, 0)
#Near Agricultural fields
pd_multiv3$Near_Agriculture_G <- ifelse(pd_multiv3$Near_Agriculture_17 == 1 |
pd_multiv3$Near_Agriculture_25 == 1 |
pd_multiv3$Near_Agriculture_40 == 1 |
pd_multiv3$Near_Agriculture_60 == 1 |
pd_multiv3$Near_Agriculture_61 == 1, 1, 0)
glm_categories1 <- glm(PD ~ WPest_Amount + NWPest_Amount + Age + Sex + Education_level +
Tobacco + Coffee + Alcohol + NSAIDs + Aspirin +
FamilyPD + HMetals + Head_injury + Near_Agriculture_G,
data = pd_multiv3, family = "binomial")
summary(glm_categories1)
1-377.03/512.37
library(car)
vif(glm_categories1)
install.packages("bestglm")
install.packages("MuMIn")
library(MuMIn)
dredge(glm_categories1)
View(pd_multiv3)
##GLMs
options(na.action = "na.fail")
glm_categories1 <- glm(PD ~ WPest_Amount + NWPest_Amount + Age + Sex + Education_level +
Tobacco + Coffee + Alcohol + NSAIDs + Aspirin +
FamilyPD + HMetals + Head_injury + Near_Agriculture_G,
data = pd_multiv3, family = "binomial")
colSums(is.na(pd_multiv3))
options(na.action = "na.omit")
pd_multivf <- na.omit(pd_multiv3)
colSums(is.na(pd_multivf))
##GLMs
options(na.action = "na.fail")
glm_categories1 <- glm(PD ~ WPest_Amount + NWPest_Amount + Age + Sex + Education_level +
Tobacco + Coffee + Alcohol + NSAIDs + Aspirin +
FamilyPD + HMetals + Head_injury + Near_Agriculture_G,
data = pd_multiv3, family = "binomial")
glm_categories1 <- glm(PD ~ WPest_Amount + NWPest_Amount + Age + Sex + Education_level +
Tobacco + Coffee + Alcohol + NSAIDs + Aspirin +
FamilyPD + HMetals + Head_injury + Near_Agriculture_G,
data = pd_multivf, family = "binomial")
summary(glm_categories1)
mod_full <- dredge(glm_categories1)
head(mod_full)
head(mod_full)
summary(glm(PD~Age + Family_PD+NSAIDs+Sex, data=pd_multivf, family = "binomial"))
summary(glm(PD~Age + FamilyPD+NSAIDs+Sex, data=pd_multivf, family = "binomial"))
summary(glm(PD~Age + FamilyPD+NSAIDs+NWPest_Amount, data=pd_multivf, family = "binomial"))
summary(glm(PD~Age+ Education_level + FamilyPD+NSAIDs+NWPest_Amount, data=pd_multivf, family = "binomial"))
AIC(glm(PD~Age+ Education_level + FamilyPD+NSAIDs+NWPest_Amount, data=pd_multivf, family = "binomial"))
head(mod_full)
best <- get.models(mod_full,subset = 1)[[1]]
summary(best)
summary(glm(formula = PD ~ Age + Coffee + FamilyPD + NSAIDs + WPest_Amount + NWPest_Amount +
Sex + 1, family = "binomial", data = pd_multivf))
mod_full <- dredge(glm_categories1, fixed = c("NWPest_Amount", "WPest_Amount"))
head(mod_full)
models_best <- get.models(mod_full, subset = delta<2)
compare_performance(models_best[[1]], models_best[[2]], models_best[[3]],
models_best[[4]], models_best[[5]], models_best[[6]],
models_best[[7]], rank = T)
compare_performance(models_best[[1]], models_best[[2]], models_best[[3]],
models_best[[4]], models_best[[5]], models_best[[6]],
models_best[[7]], rank = T)
compare_performance(models_best[[1]], models_best[[2]], models_best[[3]],
models_best[[4]], models_best[[5]], models_best[[6]],
models_best[[7]], rank = T)
glm_final <- models_best[[2]]
summary(glm_final)
glm_final1 <- glm(PD ~ Sex + Age + Education_level + FamilyPD + WPest_Amount +
NWPest_Amount + Coffee + NSAIDs, data = pd_multivf, family = "binomial")
summary(glm_final1)
source("~/Documents/Universidad/Doctorado CBM/1er Semestre/Unidad de Investigación/LargePD cesion datos/Analysis/PD-Analysis.R")
EXP_AMB$moca_score_sum
Controls$moca_complete
Controls$moca_complete.factor
Controls$moca_score_sum
Controls$moca_file
Controls$span_part3_moca_evaluation_y_n
Controls$span_part3_moca_evaluation_y_n.factor
Patients$span_part3_moca_evaluation_y_n
Patients$span_part3_moca_evaluation_y_n.factor
EXP_AMB$span_part2_nms___1
Controls$span_part2_nms___1
Controls$span_part2_nms___2
Controls$span_part2_nms___3
Controls$span_part2_nms___4
Controls$span_part2_nms___5
Controls$span_part2_nms___6
Controls$span_part2_nms___7
Controls$span_part2_nms___78
Controls$span_part2_nms___8
library(rstatix)
library(MVN)
library(car)
library(ggplot2)
library(ggpubr)
data1 <- read.table("/Users/samuel_jorquera/Documents/Universidad/Doctorado CBM/1er Semestre/Estadística/Practico/Suelos.txt", header = T)
head(data1)
str(data1)
data1$site <- as.factor(data1$site)
## Estimar las correlaciones entre todas las variables físico-químicas.
cor(data1)
head(data1)
## Una matriz de correlaciones solo puede obtenerse a partir de variables númericas.
## Por lo tanto debemos excluir las variables agrupadoras
data2 <- data1[,-c(1,2)]
cor(data2)
round(cor(data2),2) # coeficientes de correlación con dos cifras significativas
## Ahora hagamos lo mismo, pero con el paquete rstatix
cor.mat <- data2 %>% cor_mat()
cor.mat
#
# Veamos qué correlaciones son significativas.
cor.mat %>% cor_get_pval()
cor.mat %>% cor_mark_significant()
#
# Grafiquemos la matriz de correlación
cor.mat %>% pull_lower_triangle() %>% cor_plot()
head(data)
#
## pH (columna 3), cárbono (columna 4), nitrógeno (columna 5), fósforo (columna 8) y potasio (columna 9).
## Cálculemos el promedio, desviación estándar y número de muestras para cada localidad
aggregate(data1[,c(3,4,5,8,9)],list(data1$site),mean)
aggregate(data1[,c(3,4,5,8,9)],list(data1$site),sd)
aggregate(data1[,c(3,4,5,8,9)],list(data1$site),length)
#
## Evaluar la normalidad multivariada
library("MVN")
mvn(data1[,c(3,4,5,8,9)],mvn_test="hz")
#
## Evaluar la homogeneidad de varianzas
library(car)
leveneTest(data1$pH ~data1$site)
leveneTest(data1$C ~data1$site)
leveneTest(data1$N ~data1$site)
leveneTest(data1$P ~data1$site)
leveneTest(data1$K ~data1$site)
#
## Evaluar presencia de outliers
mahalanobis_distance(data = data1[, c("pH","C","N","P","K")])$is.outlier
#
## Realizar el MANOVA
m0 <- manova(cbind(pH,C,N,P,K) ~ site, data=data1)
anova(m0, test="Wilks")
#
## Cálcular el tamaño del efecto
library(effectsize)
eta_squared(m0)
#
## Revisar los resultados del ANOVA para cada variable
summary.aov(m0)
# ó
m1 <- aov(data1$pH ~data1$site); anova(m1)
m2 <- aov(data1$C ~data1$site); anova(m2)
m3 <- aov(data1$N ~data1$site); anova(m3)
m4 <- aov(data1$P ~data1$site); anova(m4)
m5 <- aov(data1$K ~data1$site); anova(m5)
#
## Realizar las pruebas a posteriori
post.m1 <- TukeyHSD(m1); plot(post.m1)
post.m2 <- TukeyHSD(m1); plot(post.m2)
post.m3 <- TukeyHSD(m1); plot(post.m3)
post.m5 <- TukeyHSD(m1); plot(post.m5)
plot1 <- ggboxplot(data1, x="site", y="pH", col="black", ylab="pH", xlab="Sitios", add="jitter")
plot1
EXP_AMB$span_part3_prescription_nsaids.factor
install.package("tidyverse ")
install.packages("tidyverse")
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(aes(x = cut))
!paste0
!paste0()
!t.test()
!t.test
paste0()!
!plot
?prop.test
?function
?function
?function
function
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 + homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two-sided")
}
#NFE2L2_rs6721961
#EUR: 45320 11238   702
#AMR: 2153 1184  213
proptest(45320, 11238, 702, 2153, 1184, 213)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided")
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 + homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided")
}
tot2 <- 2*(homA2+het2+homa2)
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 + homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided")
}
#NFE2L2_rs6721961
#EUR: 45320 11238   702
#AMR: 2153 1184  213
proptest(45320, 11238, 702, 2153, 1184, 213)
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 +2*homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided")
}
#NFE2L2_rs6721961
#EUR: 45320 11238   702
#AMR: 2153 1184  213
proptest(45320, 11238, 702, 2153, 1184, 213)
#PPARGC1A_rs6821591
#EUR: 14842 28556 14089
#AMR:1076 1763  709
proptest(14842, 28556, 14089, 1076, 1763,  709)
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 +2*homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided",
correction = FALSE)
}
#NFE2L2_rs6721961
#EUR: 45320 11238   702
#AMR: 2153 1184  213
proptest(45320, 11238, 702, 2153, 1184, 213)
proptest <- function(homA1,het1, homa1, homA2, het2, homa2) {
num1 <- het1+2*homa1
num2 <- het2 +2*homa2
tot1 <- 2*(homA1+het1+homa1)
tot2 <- 2*(homA2+het2+homa2)
prop.test(x = c(num1, num2), n= c(tot1, tot2),alternative = "two.sided",
correct = FALSE)
}
#NFE2L2_rs6721961
#EUR: 45320 11238   702
#AMR: 2153 1184  213
proptest(45320, 11238, 702, 2153, 1184, 213)
#PPARGC1A_rs6821591
#EUR: 14842 28556 14089
#AMR:1076 1763  709
proptest(14842, 28556, 14089, 1076, 1763,  709)
library(ade4)
library(vegan)
?mantel.rtest()
?mantel.partial()
class(c(2,3))
class(data.frame(1,2))
#Limpiar data
rm(list=ls())
#Cargar data
data <- read.delim("../meta/maizteocintle_SNP50k_meta_extended.txt")
setwd("~/Documents/Github_repositories/Tareas_BioinfRepro2025_SJA/Tarea03/data/PracUni1Ses3/maices/bin")
#Cargar data
data <- read.delim("../meta/maizteocintle_SNP50k_meta_extended.txt")
datatype <- class(data)
print(paste0("data type: "), datatype)
datatype
print(paste0("data type: ", datatype))
?head
head(data, n=6L)
#2. ¿Cómo se ven las primeras 6 líneas del archivo?
print("Primeras 6 líneas:")
head(data, n=6L)
#2. ¿Cómo se ven las primeras 6 líneas del archivo?
print("Primeras 6 líneas:")
head(data, n=6L)
nrows <- nrow(data)
print(paste0("Numero de muestras: ", nrows))
class(data$Estado)
data$Estado.1
#Transformar $estado a factor
data$Estado_factor <- as.factor(data$Estado)
levels(data$Estado_factor)
length(levels(data$Estado_factor))
#niveles
estados <- levels(data$Estado_factor)
print(paste0("Cantidad de estados incluidos en estudio: ", estados))
print(paste0("Cantidad de estados incluidos en estudio: ", lenght(estados)))
print(paste0("Cantidad de estados incluidos en estudio: ", length(estados)))
print("Los estados son:")
estados
for estado in estados:
for (estado in estados):
print(estado)
print(i)
class(estados)
for (i in 1:10){
print(35/i)
}
print(estado)
for(estado in estados){
print(estado)
}
print("Los estados son:")
for(estado in estados){
print(estado)
}
#Transformar $estado a factor
data$Estado_factor <- as.factor(data$Estado)
#niveles
estados <- levels(data$Estado_factor)
print(paste0("Cantidad de estados incluidos en estudio: ", length(estados)))
print("Los estados son:")
for(estado in estados){
print(estado)
}
##5. ¿Cuántas muestras fueron colectadas antes de 1980?
n_1980 <- nrow(data[data$A.o._de_colecta<1980,])
n_1980
print(paste0("Se tomaron ", n_1980, " muestras antes de 1980"))
#paquetes
library(dplyr)
print("Muestras por raza:")
data %>%
group_by(Raza) %>%
count()
print("Muestras por raza:")
count_raza <- data %>% group_by(Raza) %>% count()
count_raza <- as.data.frame(count_raza)
count_raza
data$Altitud
print(paste0("En promedio se colectaron a la altitud de ", mean(data$Altitud), " m.s.n.m"))
print(paste0("En promedio se colectaron a la altitud de ", round(mean(data$Altitud)), " m.s.n.m"))
print(paste0("La altitud mínima de recolección fue: ", min(data$Altitud)))
print(paste0("La altitud máxima de recolección fue: ", max(data$Altitud)))
print(paste0("La altitud mínima de recolección fue: ", min(data$Altitud), "m.s.n.m"))
print(paste0("La altitud máxima de recolección fue: ", max(data$Altitud), "m.s.n.m"))
print(paste0("La altitud mínima de recolección fue: ", min(data$Altitud), " m.s.n.m"))
print(paste0("La altitud máxima de recolección fue: ", max(data$Altitud), " m.s.n.m"))
data_olotillo <- data[data$Raza == "Olotillo",]
head(data_olotillo)
data_rja <- data[data$Raza == "Reventador"|data$Raza =="Jala"|data$Raza =="Ancho",]
head(data_rja)
##11 Escribe la matriz anterior a un archivo llamado "submat.cvs" en /meta.
write.csv(data_rja, file = "submat.csv")
getwd()
